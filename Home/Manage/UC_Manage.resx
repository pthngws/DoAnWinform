<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPatient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABD1JREFUeF7t3c2vTXcUxvErDW0NJJV0ophhoH8AE6akg86ZePkD/AuGJhppatAZ
        A0IJAyNtDQwRMZDGgDGJd5XQJpd6VkRyczxnnX27zm/vtfZ9vslnwrGss3fui59zWFBKKaWUUkoppdTo
        2gYX4CE8gjOwCdQI+gFewn8T7Mfs51ThjsAiTN7cT97DUVgFqlBfwilgN5U5B2tBFWgD3AB2Iz13YDOo
        xO0A+0aK3cAuHsMuUAnbB2+A3bjl+AcOgUrSF3AM2M2K+BVWgxqwdXAF2A2ah6vwDagB2gL3gN2YeboP
        20H12B54AeyGtPA3/Aiqh2YdXrSiQ5HGfQ1ngV38Ptk5tu2ynOzc+yLYZ4LJefZjl8DOy1dsG+EWTF6c
        odgutlOX7OY+AzZnKXtM15mjaifY3wCxizIk28l2m5V95LJfz/wGK6qDYAcP7GJkYLsdAC/2aXmaV7Ai
        anV40Yp3KMIe7xl9drDwO7Ann5ntzA5F2GM9o24r9HF40coDmDwUYY/zjLa90OfhRSuThyLsMZ5RZocX
        74A94YqWHoqwn/eMqiyHF638n+c2mr6Dm8Ce5Eo2irIeXmRQvv0wj1dejFXZqh1eDKVk66Hi4cUQylX9
        8KJvpbLDC/a2EZmuTGM7vOhL+r6C08CWl9lSZ69euA1scekm7dtadXgxH09gN6TKDi/eAltYlu9fOAyD
        p8OLtgZ9+4wdXvwBbDGZn+vwLfSavWrBXr3AFpL56/XtM/YC7efAFpF27JrbqWDz7FX4bAFpz15j3Tx7
        7S77zaU9O/Zt3nJeyC3z1csNvgzsN5f2zkPz9E3WMJ5Cb29Os/NSe6OUvh63Z9fYPnLTvPOQLSndpY8t
        Ld2ljy0t3aWPLS3dpY8tLd2ljy0t3aWPLS3dpY8tLd2ljy1dWTQ205M+tnRl0dhMT/rY0pVFYzM96WNL
        VxaNzfSkjy1dWTQ205M+tnRl0dhMT/rY0pVFYzM96WNLVxaNzfSkjy1dWTQ205M+tnRl0dhMT/rY0pVF
        YzM96WNLVxaNzfSkjy1dWTQ205M+tnRl0dhMT/rY0pVFYzM96WNLVxaNzfSkjy1dWTQ205M+tnRl0dhM
        T/rY0pVFYzM96WNLVxaNzfSkjy1dWTQ205M+tnRl0dhMT/rY0pVFYzM96WNLVxaNzfSkjy1dWTQ205M+
        tnRl0dhMT/rY0pVFYzM96WNLVxaNzfSkjy1dWTQ205M+tnRl0dhMT/rY0pVFYzM96WNLVxaNzfSkjy0t
        3aWPLS3dpY8tLd2ljy0t3aXvNbDFZTb7h0fT9xew5WW2u5C+E8CWl9mOQ/q+h0VgT0Cms2vW23+dE+0k
        sCch0/0MZVoD14A9Efncn2DXrFS28C+gT9fT2bWxj9xyN3dp9nXlJ7DvEPVHqI/XwK6FXZMyX3OVUkop
        pZRSSimllFJKKaWUUkplamHhA3IjPJ7MtshIAAAAAElFTkSuQmCC
</value>
  </data>
</root>